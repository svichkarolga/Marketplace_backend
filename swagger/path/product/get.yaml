tags:
  - Products
summary: Get all products
operationId: getAllProducts
description: 'Get all products'
security:
  - bearerAuth: []
parameters:
  - in: query
    name: page
    schema:
      type: integer
      example: 1
    description: Page number for pagination.
  - in: query
    name: perPage
    schema:
      type: integer
      example: 10
    description: Number of products per page.
  - in: query
    name: sortBy
    required: false
    schema:
      type: string
      enum:
        - _id
        - name
        - category
        - description
        - price
        - condition
        - region
        - city
        - delivery
        - sellerId
        - phoneNumber
        - timestamps
        - favoritesCount
      example: price
    description: Field to sort by.
  - in: query
    name: sortOrder
    required: false
    schema:
      type: string
      enum:
        - asc
        - desc
      example: asc
    description: Sort order (ascending or descending).
  - in: query
    name: category
    required: false
    schema:
      type: string
      example: fashion
    description: Filter by product category.
  - in: query
    name: maxPrice
    required: false
    schema:
      type: number
      example: 100
    description: Maximum price filter.
  - in: query
    name: minPrice
    required: false
    schema:
      type: number
      example: 10
    description: Minimum price filter.
  - in: query
    name: price
    required: false
    schema:
      type: number
      example: 50
    description: Exact price filter.
  - in: query
    name: name
    required: false
    schema:
      type: string
      example: 'Tea set'
    description: Filter by product name.
  - in: query
    name: condition
    required: false
    schema:
      type: string
      enum:
        - new
        - used
      example: new
    description: Filter by product condition.
  - in: query
    name: region
    required: false
    schema:
      type: string
      example: Kyivska
    description: Filter by region.
  - in: query
    name: city
    required: false
    schema:
      type: string
      example: Kyiv
    description: Filter by city.
  - in: query
    name: sellerId
    required: false
    schema:
      type: string
      example: '60c72b2f9f1b2c001f6c6c2b'
    description: Filter by seller ID.
responses:
  '200':
    description: 'Successfully fetched all products'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully found products
            data:
              type: object
              required:
                - data
                - page
                - perPage
                - totalItems
                - totalPages
                - hasNextPage
                - hasPreviousPage
              properties:
                data:
                  type: array
                  items:
                    $ref: ../../components/schemas/product.yaml
                page:
                  type: integer
                  example: 2
                perPage:
                  type: integer
                  example: 4
                totalItems:
                  type: integer
                  example: 40
                totalPages:
                  type: integer
                  example: 10
                hasNextPage:
                  type: boolean
                  example: true
                hasPreviousPage:
                  type: boolean
                  example: false
  '404':
    $ref: '../../components/responses/404.yaml'
