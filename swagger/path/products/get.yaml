tags:
  - Products
summary: Get list of products
operationId: getProducts
description: 'Get list of products with this endpoint'
security:
  - bearerAuth: []
parameters:
  - in: query
    name: page
    schema:
      type: integer
    example: 1
  - in: query
    name: perPage
    schema:
      type: integer
      example: 10
  - in: query
    name: sortBy
    schema:
      type: string
      example: 'category'
    description: 'Field to sort contacts by'
  - in: query
    name: sortOrder
    schema:
      type: string
      enum: ['asc', 'desc']
      example: 'asc'
    description: Sort order (ascending or descending).
  - in: query
    name: category
    schema:
      type: string
      enum:
        - children
        - pet
        - home
        - fashion
        - hobby
        - sport
        - tools
        - gadget
        - garden
        - free
      example: home
  - in: query
    name: maxPrice
    schema:
      type: number
      example: 10
  - in: query
    name: minPrice
    schema:
      type: number
      example: 100
  - in: query
    name: price
    schema:
      type: number
      example: 160
  - in: query
    name: name
    schema:
      type: string
      example: tea set
  - in: query
    name: condition
    schema:
      type: string
      enum:
        - new
        - used
      example: new
  - in: query
    name: region
    schema:
      type: string
      enum:
        - Vinnytska
        - Volynska
        - Dnipropetrovska
        - Donetska
        - Zhytomyrska
        - Zakarpatska
        - Zaporizka
        - Ivano-Frankivska
        - Kyivska
        - Kirovohradska
        - Luhanska
        - Lvivska
        - Mykolaivska
        - Odeska
        - Poltavska
        - Rivnenska
        - Sumska
        - Ternopilska
        - Kharkivska
        - Khersonska
        - Khmelnytska
        - Cherkaska
        - Chernivetska
        - Chernihivska
        - Crimea
      example: Kharkivska
  - in: query
    name: city
    schema:
      type: string
      example: Kharkiv
  - in: query
    name: sellerId
    schema:
      type: string
      example: '68002419bfdce5d8b27cb918'
responses:
  '200':
    description: Successfully found products!
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully found products!
            data:
              type: object
              required:
                - data
                - page
                - perPage
                - totalItems
                - totalPages
                - hasNextPage
                - hasPreviousPage
              properties:
                data:
                  type: array
                  items:
                    $ref: ../../components/schemas/product.yaml
                page:
                  type: number
                  example: 2
                perPage:
                  type: number
                  example: 4
                totalItems:
                  type: number
                  example: 4
                totalPages:
                  type: number
                  example: 4
                hasNextPage:
                  type: boolean
                  example: false
                hasPreviousPage:
                  type: boolean
                  example: true
  '401':
    $ref: '../../components/responses/401.yaml'
