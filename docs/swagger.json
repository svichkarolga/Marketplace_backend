{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "MarketPlace app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of MarketPlace app"
  },
  "servers": [
    {
      "url": "https://marketplace-backend-vrwj.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Products",
      "description": "Operations about product."
    },
    {
      "name": "Favorites",
      "description": "Operations about favorites."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "phoneNumber": {
                    "description": "User's phone number",
                    "example": "+380503456789"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session",
        "operationId": "refreshSession",
        "description": "Refresh user's session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken",
                  "sessionId"
                ],
                "properties": {
                  "refreshToken": {
                    "description": "Refresh token",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "sessionId": {
                    "description": "Session id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId"
                ],
                "properties": {
                  "sessionId": {
                    "description": "Session id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout user"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get list of products",
        "operationId": "getProducts",
        "description": "Get list of products with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "category"
            },
            "description": "Field to sort contacts by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            },
            "description": "Sort order (ascending or descending)."
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "enum": [
                "children",
                "pet",
                "home",
                "fashion",
                "hobby",
                "sport",
                "tools",
                "gadget",
                "garden",
                "free"
              ],
              "example": "home"
            }
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "in": "query",
            "name": "price",
            "schema": {
              "type": "number",
              "example": 160
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": "tea set"
            }
          },
          {
            "in": "query",
            "name": "condition",
            "schema": {
              "type": "string",
              "enum": [
                "new",
                "used"
              ],
              "example": "new"
            }
          },
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string",
              "enum": [
                "Vinnytska",
                "Volynska",
                "Dnipropetrovska",
                "Donetska",
                "Zhytomyrska",
                "Zakarpatska",
                "Zaporizka",
                "Ivano-Frankivska",
                "Kyivska",
                "Kirovohradska",
                "Luhanska",
                "Lvivska",
                "Mykolaivska",
                "Odeska",
                "Poltavska",
                "Rivnenska",
                "Sumska",
                "Ternopilska",
                "Kharkivska",
                "Khersonska",
                "Khmelnytska",
                "Cherkaska",
                "Chernivetska",
                "Chernihivska",
                "Crimea"
              ],
              "example": "Kharkivska"
            }
          },
          {
            "in": "query",
            "name": "city",
            "schema": {
              "type": "string",
              "example": "Kharkiv"
            }
          },
          {
            "in": "query",
            "name": "sellerId",
            "schema": {
              "type": "string",
              "example": "68002419bfdce5d8b27cb918"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found products!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found products!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/product"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create product",
        "operationId": "createProduct",
        "description": "Create a new product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "category",
                  "description",
                  "condition",
                  "price",
                  "phoneNumber",
                  "photo",
                  "region",
                  "city",
                  "delivery"
                ],
                "properties": {
                  "name": {
                    "description": "Name of product",
                    "type": "string",
                    "example": "Tea set"
                  },
                  "category": {
                    "description": "Category product belongs to",
                    "type": "string",
                    "enum": [
                      "children",
                      "pet",
                      "home",
                      "fashion",
                      "hobby",
                      "sport",
                      "tools",
                      "gadget",
                      "garden",
                      "free"
                    ],
                    "example": "home"
                  },
                  "description": {
                    "description": "Description of the product",
                    "type": "string",
                    "example": "A lovely porcelain tea set for a 6 person. In beige color."
                  },
                  "condition": {
                    "description": "Is it new or used",
                    "type": "string",
                    "enum": [
                      "new",
                      "used"
                    ],
                    "example": "new"
                  },
                  "price": {
                    "description": "The price for the product",
                    "type": "number",
                    "example": 1000
                  },
                  "phoneNumber": {
                    "description": "Phone number of the seller",
                    "type": "string",
                    "example": "+380698785983"
                  },
                  "photo": {
                    "description": "Link to the photo of the product",
                    "type": "string",
                    "format": "binary"
                  },
                  "region": {
                    "description": "Please select one of 25 regions of Ukraine",
                    "type": "string",
                    "enum": [
                      "Vinnytska",
                      "Volynska",
                      "Dnipropetrovska",
                      "Donetska",
                      "Zhytomyrska",
                      "Zakarpatska",
                      "Zaporizka",
                      "Ivano-Frankivska",
                      "Kyivska",
                      "Kirovohradska",
                      "Luhanska",
                      "Lvivska",
                      "Mykolaivska",
                      "Odeska",
                      "Poltavska",
                      "Rivnenska",
                      "Sumska",
                      "Ternopilska",
                      "Kharkivska",
                      "Khersonska",
                      "Khmelnytska",
                      "Cherkaska",
                      "Chernivetska",
                      "Chernihivska",
                      "Crimea"
                    ],
                    "example": "Kharkivska"
                  },
                  "city": {
                    "description": "Type the city",
                    "type": "string",
                    "example": "Kharkiv"
                  },
                  "delivery": {
                    "description": "Select what delivery you can provide",
                    "type": "string",
                    "enum": [
                      "selfPickup",
                      "mail"
                    ],
                    "example": "selfPickup"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a product!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by id",
        "operationId": "getProductByID",
        "description": "Get product by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get product by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found product with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update product",
        "operationId": "patchProduct",
        "description": "Update a product with the provided payload. Only fields in the request body will be updated.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the product to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of product",
                    "type": "string",
                    "example": "Tea set"
                  },
                  "category": {
                    "description": "Category product belongs to",
                    "type": "string",
                    "enum": [
                      "children",
                      "pet",
                      "home",
                      "fashion",
                      "hobby",
                      "sport",
                      "tools",
                      "gadget",
                      "garden",
                      "free"
                    ],
                    "example": "home"
                  },
                  "description": {
                    "description": "Description of the product",
                    "type": "string",
                    "example": "A lovely porcelain tea set for a 6 person. In beige color."
                  },
                  "condition": {
                    "description": "Is it new or used",
                    "type": "string",
                    "enum": [
                      "new",
                      "used"
                    ],
                    "example": "new"
                  },
                  "price": {
                    "description": "The price for the product",
                    "type": "number",
                    "example": 1000
                  },
                  "phoneNumber": {
                    "description": "Phone number of the seller",
                    "type": "string",
                    "example": "+380698785983"
                  },
                  "photo": {
                    "description": "Link to the photo of the product",
                    "type": "string",
                    "format": "binary"
                  },
                  "region": {
                    "description": "Please select one of 25 regions of Ukraine",
                    "type": "string",
                    "enum": [
                      "Vinnytska",
                      "Volynska",
                      "Dnipropetrovska",
                      "Donetska",
                      "Zhytomyrska",
                      "Zakarpatska",
                      "Zaporizka",
                      "Ivano-Frankivska",
                      "Kyivska",
                      "Kirovohradska",
                      "Luhanska",
                      "Lvivska",
                      "Mykolaivska",
                      "Odeska",
                      "Poltavska",
                      "Rivnenska",
                      "Sumska",
                      "Ternopilska",
                      "Kharkivska",
                      "Khersonska",
                      "Khmelnytska",
                      "Cherkaska",
                      "Chernivetska",
                      "Chernihivska",
                      "Crimea"
                    ],
                    "example": "Kharkivska"
                  },
                  "city": {
                    "description": "Type the city",
                    "type": "string",
                    "example": "Kharkiv"
                  },
                  "delivery": {
                    "description": "Select what delivery you can provide",
                    "type": "string",
                    "enum": [
                      "selfPickup",
                      "mail"
                    ],
                    "example": "selfPickup"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a product!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/updateProduct"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product",
        "operationId": "deleteProduct",
        "description": "Delete a product by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the product to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully",
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "tags": [
          "Favorites"
        ],
        "summary": "Get all favorites",
        "operationId": "getUserFavorites",
        "description": "Get all favorite products for the authorized user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of favorite products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "data"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Favorites fetched"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/favorites"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/favorites/{productId}": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Add product to favorites",
        "operationId": "addProductToFavorites",
        "description": "Add a product to the user's favorites by product ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "The ID of the product to add to favorites"
          }
        ],
        "responses": {
          "201": {
            "description": "Product successfully added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Added to favorites!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/favorites"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      },
      "delete": {
        "tags": [
          "Favorites"
        ],
        "summary": "Remove from favorites",
        "operationId": "RemoveFromFavorites",
        "description": "Remove a product from the users favorites by product ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "The ID of the product to remove from favorites"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "operationId": "getUserByID",
        "description": "Get user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68023f490dd9b7b67adfbedc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user with id 68023f490dd9b7b67adfbedc!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "operationId": "patchUser",
        "description": "Update a user with the provided payload. Only fields in the request body will be updated.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68023f490dd9b7b67adfbedc"
            },
            "description": "ID of the user to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of user",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Phone number of the user",
                    "type": "string",
                    "example": "+380698785983"
                  },
                  "photo": {
                    "description": "Link to users's photo",
                    "type": "string",
                    "format": "binary"
                  },
                  "linkField1": {
                    "description": "Link to the social profiles (example http://instagram.com)",
                    "type": "string",
                    "format": "uri"
                  },
                  "linkField2": {
                    "description": "Link to the social profiles (example http://instagram.com)",
                    "type": "string",
                    "format": "uri"
                  },
                  "linkField3": {
                    "description": "Link to the social profiles (example http://instagram.com)",
                    "type": "string",
                    "format": "uri"
                  },
                  "linkField4": {
                    "description": "Link to the social profiles (example http://instagram.com)",
                    "type": "string",
                    "format": "uri"
                  },
                  "linkField5": {
                    "description": "Link to the social profiles (example http://instagram.com)",
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "description": "Enter your name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email address",
            "type": "string",
            "example": "Doe@example.com"
          },
          "password": {
            "description": "Enter your password",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Phone number of the user",
            "type": "string",
            "example": "+380698785983"
          }
        }
      },
      "product": {
        "type": "object",
        "required": [
          "name",
          "category",
          "description",
          "condition",
          "price",
          "phoneNumber",
          "photo",
          "region",
          "city",
          "delivery"
        ],
        "properties": {
          "name": {
            "description": "Name of product",
            "type": "string"
          },
          "category": {
            "description": "Category product belongs to",
            "type": "string",
            "enum": [
              "children",
              "pet",
              "home",
              "fashion",
              "hobby",
              "sport",
              "tools",
              "gadget",
              "garden",
              "free"
            ]
          },
          "description": {
            "description": "Description of the product",
            "type": "string"
          },
          "condition": {
            "description": "Is it new or used",
            "type": "string",
            "enum": [
              "new",
              "used"
            ]
          },
          "price": {
            "description": "The price for the product",
            "type": "number"
          },
          "phoneNumber": {
            "description": "Phone number of the seller",
            "type": "string"
          },
          "photo": {
            "description": "Link to the photo of the product",
            "type": "string",
            "format": "uri"
          },
          "region": {
            "description": "Please select one of 25 regions of Ukraine",
            "type": "string",
            "enum": [
              "Vinnytska",
              "Volynska",
              "Dnipropetrovska",
              "Donetska",
              "Zhytomyrska",
              "Zakarpatska",
              "Zaporizka",
              "Ivano-Frankivska",
              "Kyivska",
              "Kirovohradska",
              "Luhanska",
              "Lvivska",
              "Mykolaivska",
              "Odeska",
              "Poltavska",
              "Rivnenska",
              "Sumska",
              "Ternopilska",
              "Kharkivska",
              "Khersonska",
              "Khmelnytska",
              "Cherkaska",
              "Chernivetska",
              "Chernihivska",
              "Crimea"
            ]
          },
          "city": {
            "description": "Type the city",
            "type": "string"
          },
          "delivery": {
            "description": "Select what delivery you can provide",
            "type": "string",
            "enum": [
              "selfPickup",
              "mail"
            ]
          }
        }
      },
      "updateProduct": {
        "type": "object",
        "required": [
          "productId"
        ],
        "properties": {
          "productId": {
            "description": "ID of the product",
            "type": "string"
          },
          "name": {
            "description": "Name of product",
            "type": "string"
          },
          "category": {
            "description": "Category product belongs to",
            "type": "string",
            "enum": [
              "children",
              "pet",
              "home",
              "fashion",
              "hobby",
              "sport",
              "tools",
              "gadget",
              "garden",
              "free"
            ]
          },
          "description": {
            "description": "Description of the product",
            "type": "string"
          },
          "condition": {
            "description": "Is it new or used",
            "type": "string",
            "enum": [
              "new",
              "used"
            ]
          },
          "price": {
            "description": "The price for the product",
            "type": "number"
          },
          "phoneNumber": {
            "description": "Phone number of the seller",
            "type": "string"
          },
          "photo": {
            "description": "Link to the photo of the product",
            "type": "string",
            "format": "uri"
          },
          "region": {
            "description": "Please select one of 25 regions of Ukraine",
            "type": "string",
            "enum": [
              "Vinnytska",
              "Volynska",
              "Dnipropetrovska",
              "Donetska",
              "Zhytomyrska",
              "Zakarpatska",
              "Zaporizka",
              "Ivano-Frankivska",
              "Kyivska",
              "Kirovohradska",
              "Luhanska",
              "Lvivska",
              "Mykolaivska",
              "Odeska",
              "Poltavska",
              "Rivnenska",
              "Sumska",
              "Ternopilska",
              "Kharkivska",
              "Khersonska",
              "Khmelnytska",
              "Cherkaska",
              "Chernivetska",
              "Chernihivska",
              "Crimea"
            ]
          },
          "city": {
            "description": "Type the city",
            "type": "string"
          },
          "delivery": {
            "description": "Select what delivery you can provide",
            "type": "string",
            "enum": [
              "selfPickup",
              "mail"
            ]
          }
        }
      },
      "favorites": {
        "type": "object",
        "required": [
          "userId",
          "productId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier of the favorite entry",
            "example": "662003f3ec1a1b001e7e7740"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who add to favorite the product",
            "example": "661ffd0f494c8a001eec7202"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the favorite product",
            "example": "661fff5f494c8a001eec7204"
          },
          "createdAt": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "204": {
        "description": "Product successfully deleted",
        "content": {}
      },
      "400": {
        "description": "Invalid Id",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Already in favorites",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Already in favorites"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Already in favorites"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}